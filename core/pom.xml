<!--
  ~ DazzleConf
  ~ Copyright Â© 2025 Anand Beh
  ~
  ~ DazzleConf is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ DazzleConf is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with DazzleConf. If not, see <https://www.gnu.org/licenses/>
  ~ and navigate to version 3 of the GNU Lesser General Public License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>space.arim.dazzleconf</groupId>
		<artifactId>dazzleconf-parent</artifactId>
		<version>1.3.0-SNAPSHOT</version>
	</parent>

	<artifactId>dazzleconf-core</artifactId>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<!--
                    We make use of different multiversion techniques. Although Java offers multi-release jars,
                    we only use them where necessary because it requires maintaining identical signatures.
                    Additionally, there is no reason to place module-info.class in a multi-release directory.

                    Plan:
                    Compile everything with Java 11
                    Re-compile most things with Java 8.
                    Then add multi-release source sets.
                    -->
					<execution>
						<!-- Recompilation of almost everything for Java 8 -->
						<id>base-compile</id>
						<configuration>
							<excludes>
								<exclude>module-info.java</exclude>
								<exclude>space/arim/dazzleconf2/internals/jdk11/**</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<!-- MR: src/main/java11 -->
						<id>multi-release-compile-jdk11</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<compileSourceRoots>
								<compileSourceRoot>${project.basedir}/src/main/java11</compileSourceRoot>
							</compileSourceRoots>
							<multiReleaseOutput>true</multiReleaseOutput>
						</configuration>
					</execution>
					<execution>
						<!-- MR: src/main/java12 -->
						<id>multi-release-compile-jdk12</id>
						<goals>
							<goal>compile</goal>
						</goals>
						<configuration>
							<release>12</release>
							<compileSourceRoots>
								<compileSourceRoot>${project.basedir}/src/main/java12</compileSourceRoot>
							</compileSourceRoots>
							<multiReleaseOutput>true</multiReleaseOutput>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>
						-XX:+EnableDynamicAgentLoading -XX:TieredStopAtLevel=1 -XX:-TieredCompilation
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf.factory=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf.internal=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf.internal.processor=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf.internal.type=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf.serialiser=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf.sorter=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf.validator=ALL-UNNAMED

						--add-opens space.arim.dazzleconf/space.arim.dazzleconf2=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf2.backend=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf2.engine=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf2.engine.liaison=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf2.migration=ALL-UNNAMED
						--add-opens space.arim.dazzleconf/space.arim.dazzleconf2.reflect=ALL-UNNAMED
					</argLine>
					<excludes>
						<exclude>**/*$*</exclude>
						<exclude>**/V1*</exclude>
						<exclude>space/arim/dazzleconf/annote/*</exclude>
						<exclude>space/arim/dazzleconf/factory/*</exclude>
						<exclude>space/arim/dazzleconf/helper/*</exclude>
						<exclude>space/arim/dazzleconf/internal/*</exclude>
						<exclude>space/arim/dazzleconf/internal/error/*</exclude>
						<exclude>space/arim/dazzleconf/internal/processor/*</exclude>
						<exclude>space/arim/dazzleconf/internal/type/*</exclude>
						<exclude>space/arim/dazzleconf/serialiser/*</exclude>
						<exclude>space/arim/dazzleconf/sorter/*</exclude>
						<exclude>space/arim/dazzleconf/validator/*</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-invoker-plugin</artifactId>
				<configuration>
					<parallelThreads>2</parallelThreads>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.19.4</version>
				<executions>
					<execution>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<coverageThreshold>75</coverageThreshold>
					<mutationThreshold>75</mutationThreshold>
					<threads>2</threads>
					<excludedClasses>
						<excludedClass>space.arim.dazzleconf.**</excludedClass>
						<excludedClass>space.arim.dazzleconf2.internals.ImmutableCollections</excludedClass>
						<excludedClass>space.arim.dazzleconf2.internals.Java8DefaultMethodProvider</excludedClass>
						<excludedClass>space.arim.dazzleconf2.internals.lang.**</excludedClass>
					</excludedClasses>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>1.2.3</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>github-workflow</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<configuration>
							<goals>verify --global-toolchains ${project.parent.basedir}/.github/workflows/toolchains.xml</goals>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>v1-tests</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>run-v1-tests</id>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/*$*</exclude>
									</excludes>
									<includes>
										<include>**/V1*Test.java</include>
										<include>space/arim/dazzleconf/annote/*Test.java</include>
										<include>space/arim/dazzleconf/factory/*Test.java</include>
										<include>space/arim/dazzleconf/helper/*Test.java</include>
										<include>space/arim/dazzleconf/internal/*Test.java</include>
										<include>space/arim/dazzleconf/internal/error/*Test.java</include>
										<include>space/arim/dazzleconf/internal/processor/*Test.java</include>
										<include>space/arim/dazzleconf/internal/type/*Test.java</include>
										<include>space/arim/dazzleconf/serialiser/*Test.java</include>
										<include>space/arim/dazzleconf/sorter/*Test.java</include>
										<include>space/arim/dazzleconf/validator/*Test.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	
	<dependencies>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
		</dependency>
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
		</dependency>
		<dependency> <!-- Required for pitest's forked JVM schenanigans (PITEST-910) -->
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>